{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  documents: [],\n  isLoading: false,\n  error: null\n};\nconst documentSlice = createSlice({\n  name: 'documents',\n  initialState,\n  reducers: {\n    fetchDocumentsStart: state => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    fetchDocumentsSuccess: (state, action) => {\n      state.isLoading = false;\n      state.documents = action.payload;\n    },\n    fetchDocumentsFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    addDocument: (state, action) => {\n      state.documents.push(action.payload);\n    },\n    removeDocument: (state, action) => {\n      state.documents = state.documents.filter(doc => doc.id !== action.payload);\n    }\n  }\n});\nexport const {\n  fetchDocumentsStart,\n  fetchDocumentsSuccess,\n  fetchDocumentsFailure,\n  addDocument,\n  removeDocument\n} = documentSlice.actions;\nexport default documentSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","documents","isLoading","error","documentSlice","name","reducers","fetchDocumentsStart","state","fetchDocumentsSuccess","action","payload","fetchDocumentsFailure","addDocument","push","removeDocument","filter","doc","id","actions","reducer"],"sources":["/Users/pranaynookala/secure-document-management/frontend/src/store/slices/documentSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface Document {\n  id: string;\n  name: string;\n  type: string;\n  size: string;\n  uploadedAt: string;\n  status: string;\n}\n\ninterface DocumentState {\n  documents: Document[];\n  isLoading: boolean;\n  error: string | null;\n}\n\nconst initialState: DocumentState = {\n  documents: [],\n  isLoading: false,\n  error: null,\n};\n\nconst documentSlice = createSlice({\n  name: 'documents',\n  initialState,\n  reducers: {\n    fetchDocumentsStart: (state) => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    fetchDocumentsSuccess: (state, action: PayloadAction<Document[]>) => {\n      state.isLoading = false;\n      state.documents = action.payload;\n    },\n    fetchDocumentsFailure: (state, action: PayloadAction<string>) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    addDocument: (state, action: PayloadAction<Document>) => {\n      state.documents.push(action.payload);\n    },\n    removeDocument: (state, action: PayloadAction<string>) => {\n      state.documents = state.documents.filter(doc => doc.id !== action.payload);\n    },\n  },\n});\n\nexport const { \n  fetchDocumentsStart, \n  fetchDocumentsSuccess, \n  fetchDocumentsFailure, \n  addDocument, \n  removeDocument \n} = documentSlice.actions;\n\nexport default documentSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAiB7D,MAAMC,YAA2B,GAAG;EAClCC,SAAS,EAAE,EAAE;EACbC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,aAAa,GAAGL,WAAW,CAAC;EAChCM,IAAI,EAAE,WAAW;EACjBL,YAAY;EACZM,QAAQ,EAAE;IACRC,mBAAmB,EAAGC,KAAK,IAAK;MAC9BA,KAAK,CAACN,SAAS,GAAG,IAAI;MACtBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDM,qBAAqB,EAAEA,CAACD,KAAK,EAAEE,MAAiC,KAAK;MACnEF,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACP,SAAS,GAAGS,MAAM,CAACC,OAAO;IAClC,CAAC;IACDC,qBAAqB,EAAEA,CAACJ,KAAK,EAAEE,MAA6B,KAAK;MAC/DF,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDE,WAAW,EAAEA,CAACL,KAAK,EAAEE,MAA+B,KAAK;MACvDF,KAAK,CAACP,SAAS,CAACa,IAAI,CAACJ,MAAM,CAACC,OAAO,CAAC;IACtC,CAAC;IACDI,cAAc,EAAEA,CAACP,KAAK,EAAEE,MAA6B,KAAK;MACxDF,KAAK,CAACP,SAAS,GAAGO,KAAK,CAACP,SAAS,CAACe,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKR,MAAM,CAACC,OAAO,CAAC;IAC5E;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXJ,mBAAmB;EACnBE,qBAAqB;EACrBG,qBAAqB;EACrBC,WAAW;EACXE;AACF,CAAC,GAAGX,aAAa,CAACe,OAAO;AAEzB,eAAef,aAAa,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}