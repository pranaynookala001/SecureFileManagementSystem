{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  notifications: []\n};\nconst notificationSlice = createSlice({\n  name: 'notifications',\n  initialState,\n  reducers: {\n    addNotification: (state, action) => {\n      state.notifications.push(action.payload);\n    },\n    removeNotification: (state, action) => {\n      state.notifications = state.notifications.filter(notification => notification.id !== action.payload);\n    },\n    clearNotifications: state => {\n      state.notifications = [];\n    }\n  }\n});\nexport const {\n  addNotification,\n  removeNotification,\n  clearNotifications\n} = notificationSlice.actions;\nexport default notificationSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","notifications","notificationSlice","name","reducers","addNotification","state","action","push","payload","removeNotification","filter","notification","id","clearNotifications","actions","reducer"],"sources":["/Users/pranaynookala/secure-document-management/frontend/src/store/slices/notificationSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface Notification {\n  id: string;\n  message: string;\n  type: 'success' | 'error' | 'warning' | 'info';\n  duration?: number;\n}\n\ninterface NotificationState {\n  notifications: Notification[];\n}\n\nconst initialState: NotificationState = {\n  notifications: [],\n};\n\nconst notificationSlice = createSlice({\n  name: 'notifications',\n  initialState,\n  reducers: {\n    addNotification: (state, action: PayloadAction<Notification>) => {\n      state.notifications.push(action.payload);\n    },\n    removeNotification: (state, action: PayloadAction<string>) => {\n      state.notifications = state.notifications.filter(\n        notification => notification.id !== action.payload\n      );\n    },\n    clearNotifications: (state) => {\n      state.notifications = [];\n    },\n  },\n});\n\nexport const { addNotification, removeNotification, clearNotifications } = notificationSlice.actions;\nexport default notificationSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAa7D,MAAMC,YAA+B,GAAG;EACtCC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,iBAAiB,GAAGH,WAAW,CAAC;EACpCI,IAAI,EAAE,eAAe;EACrBH,YAAY;EACZI,QAAQ,EAAE;IACRC,eAAe,EAAEA,CAACC,KAAK,EAAEC,MAAmC,KAAK;MAC/DD,KAAK,CAACL,aAAa,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC1C,CAAC;IACDC,kBAAkB,EAAEA,CAACJ,KAAK,EAAEC,MAA6B,KAAK;MAC5DD,KAAK,CAACL,aAAa,GAAGK,KAAK,CAACL,aAAa,CAACU,MAAM,CAC9CC,YAAY,IAAIA,YAAY,CAACC,EAAE,KAAKN,MAAM,CAACE,OAC7C,CAAC;IACH,CAAC;IACDK,kBAAkB,EAAGR,KAAK,IAAK;MAC7BA,KAAK,CAACL,aAAa,GAAG,EAAE;IAC1B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,eAAe;EAAEK,kBAAkB;EAAEI;AAAmB,CAAC,GAAGZ,iBAAiB,CAACa,OAAO;AACpG,eAAeb,iBAAiB,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}